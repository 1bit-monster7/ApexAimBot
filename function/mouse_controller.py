"""
鼠标、键盘 控制和监听
https://www.johngo689.com/226869/
https://pan.baidu.com/s/1VkE2FQrNEOOkW6tCOLZ-kw?pwd=yh3s
https://pypi.org/project/pynput/
"""
import threading

import win32api
import win32con
import winsound
from pynput import keyboard
from pynput import mouse

from function import config
from function.FOV import FOV_X, FOV_Y
from function.PID_INCREMENT import PID_PLUS
from function.configUtils import get_config_from_key
from function.delay_ms import delay_ms
from function.logitech import Logitech
from function.segmentedMovement import segmented_movement_xy

recoil_patterns = {
    "3030": [[0, 4, 0.14]],
    "ALTERNATOR": [[0, 0, 0.0149], [0, 0, 0.0149], [0, 3, 0.0149], [1, 1, 0.0149], [1, 0, 0.0149], [-1, 2, 0.0149],
                   [1, 0, 0.0149], [0, 0, 0.0149], [0, 1, 0.0149], [-1, 3, 0.0149], [1, 1, 0.0149], [-1, 2, 0.0149],
                   [0, 0, 0.0149], [1, 0, 0.0149], [-1, 1, 0.0149], [1, 3, 0.0149], [2, 1, 0.0149], [1, 1, 0.0149],
                   [0, 3, 0.0149], [1, -1, 0.0149], [0, 1, 0.0149], [-1, 3, 0.0149], [0, -1, 0.0149], [-1, 2, 0.0149],
                   [0, 0, 0.0149], [0, -1, 0.0149], [0, 0, 0.0149], [2, 5, 0.0149], [1, 1, 0.0149], [-1, 3, 0.0149],
                   [0, 0, 0.0149], [1, 1, 0.0149], [0, 0, 0.0149], [-1, 1, 0.0149], [0, 1, 0.0149], [-1, 2, 0.0149],
                   [0, 0, 0.0149], [0, 0, 0.0149], [0, 1, 0.0149], [1, 3, 0.0149], [1, 1, 0.0149], [-1, 2, 0.0149],
                   [1, 0, 0.0149], [0, 0, 0.0149], [0, 1, 0.0149], [-1, 1, 0.0149], [-1, -1, 0.0149], [-2, 1, 0.0149],
                   [0, 0, 0.0149], [0, -1, 0.0149], [-1, 0, 0.0149], [2, 3, 0.0149], [1, 1, 0.0149], [0, 2, 0.0149],
                   [0, 0, 0.0149], [1, 1, 0.0149], [0, 0, 0.0149], [-2, 1, 0.0149], [-1, 0, 0.0149], [-1, -1, 0.0149],
                   [-1, 1, 0.0149], [0, -1, 0.0149], [-1, 1, 0.0149], [2, 3, 0.0149], [1, 1, 0.0149], [0, 2, 0.0149],
                   [1, 0, 0.0149], [0, 0, 0.0149], [0, 1, 0.0149], [-2, 1, 0.0149], [-1, -1, 0.0149], [-1, 0, 0.0149],
                   [-1, 1, 0.0149], [0, -1, 0.0149], [-1, 1, 0.0149], [1, 2, 0.0149], [1, -1, 0.0149], [0, 2, 0.0149],
                   [0, 0, 0.0149], [1, -1, 0.0149], [0, 1, 0.0149], [-1, 1, 0.0149], [-1, 0, 0.0149], [-1, 0, 0.0149],
                   [-1, 1, 0.0149], [0, 0, 0.0149], [0, 1, 0.0149], [1, 3, 0.0149], [3, 0, 0.0149], [0, 3, 0.0149],
                   [1, 0, 0.0149], [0, -1, 0.0149], [-1, 3, 0.0149], [0, -1, 0.0149], [0, 0, 0.0149], [-1, 3, 0.0149],
                   [0, -1, 0.0149], [-1, 1, 0.0149], [0, 1, 0.0149], [1, 1, 0.0149], [1, 0, 0.0149], [1, 1, 0.0149],
                   [0, 0, 0.0149], [1, -1, 0.0149], [-1, 3, 0.0149], [0, 0, 0.0149], [0, 0, 0.0149], [-1, 1, 0.0149],
                   [0, 1, 0.0149], [-1, 0, 0.0149], [0, 0, 0.0149], [2, 1, 0.0149], [1, -1, 0.0149], [2, 1, 0.0149],
                   [1, 0, 0.0149], [0, 0, 0.0149], [1, 0, 0.0149], [-1, 2, 0.0149], [0, 0, 0.0149], [-1, 2, 0.0149],
                   [0, 0, 0.0149], [0, 0, 0.0149], [0, 1, 0.0149], [1, 0, 0.0149], [1, 0, 0.0149], [1, 1, 0.0149],
                   [1, 0, 0.0149], [0, -1, 0.0149], [0, 1, 0.0149], [-1, 1, 0.0149], [0, -1, 0.0149], [-1, 2, 0.0149],
                   [0, 0, 0.0149], [0, -1, 0.0149], [0, 1, 0.0149], [1, 0, 0.0149], [1, -1, 0.0149], [1, 1, 0.0149],
                   [0, 0, 0.0149], [1, -1, 0.0149], [0, 1, 0.0149], [-1, 1, 0.0149], [0, 0, 0.0149], [-1, 2, 0.0149],
                   [0, 0, 0.0149], [0, -1, 0.0149], [0, 1, 0.0149], [1, 0, 0.0149], [1, -1, 0.0149], [1, 0, 0.0149],
                   [1, 1, 0.0149], [0, -1, 0.0149], [0, 1, 0.0149], [-1, 1, 0.0149], [0, -1, 0.0149], [-1, 1, 0.0149],
                   [0, 0, 0.0149], [1, -1, 0.0149], [-1, 3, 0.0149], [1, -1, 0.0149], [0, 0, 0.0149], [-1, 2, 0.0149],
                   [0, -1, 0.0149], [0, 1, 0.0149]],
    "CAR": [[0, 0, 0.0136], [0, 3, 0.0136], [1, 1, 0.0136], [0, 1, 0.0136], [-1, 1, 0.0136], [1, -1, 0.0136],
            [1, 6, 0.0136], [1, -1, 0.0136], [0, 2, 0.0136], [1, 2, 0.0136], [1, 0, 0.0136], [-1, 2, 0.0136],
            [1, -1, 0.0136], [1, 3, 0.0136], [2, 3, 0.0136], [1, 0, 0.0136], [-1, 1, 0.0136], [1, 2, 0.0136],
            [1, 2, 0.0136], [0, 1, 0.0136], [0, -1, 0.0136], [1, 3, 0.0136], [2, 3, 0.0136], [1, 1, 0.0136],
            [-1, 1, 0.0136], [1, 3, 0.0136], [2, 2, 0.0136], [0, 1, 0.0136], [-1, 3, 0.0136], [1, 2, 0.0136],
            [-1, 1, 0.0136], [0, 1, 0.0136], [-1, 1, 0.0136], [-1, 2, 0.0136], [0, 1, 0.0136], [-1, 1, 0.0136],
            [0, 3, 0.0136], [1, 2, 0.0136], [0, 1, 0.0136], [-1, 0, 0.0136], [-1, 1, 0.0136], [1, 0, 0.0136],
            [-1, 1, 0.0136], [0, 1, 0.0136], [-2, 0, 0.0136], [-1, -3, 0.0136], [-1, 1, 0.0136], [0, 0, 0.0136],
            [-2, 0, 0.0136], [0, -1, 0.0136], [-1, 1, 0.0136], [0, 0, 0.0136], [-1, 2, 0.0136], [0, 0, 0.0136],
            [-1, 1, 0.0136], [0, -1, 0.0136], [2, 3, 0.0136], [1, -1, 0.0136], [0, 2, 0.0136], [0, -1, 0.0136],
            [3, 0, 0.0136], [1, -1, 0.0136], [1, 1, 0.0136], [0, -1, 0.0136], [2, 1, 0.0136], [1, -1, 0.0136],
            [0, 2, 0.0136], [0, -1, 0.0136], [-1, 1, 0.0136], [0, -1, 0.0136], [-1, 1, 0.0136], [-1, 1, 0.0136],
            [0, -2, 0.0136], [-1, 1, 0.0136], [0, 0, 0.0136], [-1, 1, 0.0136], [-1, -1, 0.0136], [0, 0, 0.0136],
            [0, 1, 0.0136], [-2, 0, 0.0136], [-1, -3, 0.0136], [-1, 1, 0.0136], [0, 0, 0.0136], [-1, 1, 0.0136],
            [0, -1, 0.0136], [0, 1, 0.0136], [0, 0, 0.0136], [1, 2, 0.0136], [1, 0, 0.0136], [0, 1, 0.0136],
            [0, 0, 0.0136], [1, 2, 0.0136], [0, -1, 0.0136], [0, 1, 0.0136], [1, 0, 0.0136], [1, 0, 0.0136],
            [0, -1, 0.0136], [1, 1, 0.0136], [0, 1, 0.0136], [1, 1, 0.0136], [1, 1, 0.0136], [0, 1, 0.0136],
            [1, 1, 0.0136], [0, 1, 0.0136], [1, 0, 0.0136], [-1, 0, 0.0136], [1, -1, 0.0136], [0, 1, 0.0136],
            [0, 0, 0.0136], [0, 0, 0.0136]],
    "DEVOTION": [[0, 0, 0.04], [1, 22, 0.18], [0, 18, 0.17], [0, 19, 0.14], [2, 19, 0.12], [3, 17, 0.1], [3, 10, 0.085],
                 [3, 9, 0.085], [6, 5, 0.085], [3, 6, 0.085], [3, 5, 0.068], [5, 5, 0.068], [5, 4, 0.068],
                 [6, 2, 0.068], [8, 2, 0.068], [7, 0, 0.068], [4, -2, 0.068], [6, 2, 0.068], [-1, 4, 0.068],
                 [0, 5, 0.066], [-4, 3, 0.066], [-5, 2, 0.066], [-5, 2, 0.066], [-7, 3, 0.066], [-7, 3, 0.066],
                 [-3, 3, 0.066], [2, 3, 0.066], [-1, 5, 0.066], [-4, 4, 0.066], [-5, 3, 0.07], [-6, 2, 0.07],
                 [-6, -1, 0.07], [-6, -1, 0.07], [-5, 4, 0.07], [-5, 3, 0.067], [-1, 4, 0.067], [-3, 4, 0.067],
                 [2, 3, 0.067], [2, 4, 0.066], [-1, 4, 0.067], [-1, 2, 0.067], [-4, 2, 0.067], [-1, 2, 0.067],
                 [-1, 3, 0.067], [-4, 3, 0.067], [-1, 2, 0.067], [-1, 3, 0.067], [-4, 3, 0.067], [-1, 2, 0.067],
                 [-1, 3, 0.067], [-4, 3, 0.067]],
    "FLATLINE": [[0, 0, 0.0166], [2, 4, 0.0166], [-1, 3, 0.0166], [1, 1, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166],
                 [1, -1, 0.0166], [1, -1, 0.0166], [-3, 5, 0.0166], [1, -1, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166],
                 [1, -1, 0.0166], [1, 2, 0.0166], [1, 2, 0.0166], [1, 2, 0.0166], [1, 0, 0.0166], [-1, 1, 0.0166],
                 [1, 0, 0.0166], [1, -1, 0.0166], [0, 2, 0.0166], [1, 2, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166],
                 [1, -2, 0.0166], [0, 1, 0.0166], [2, 3, 0.0166], [0, 3, 0.0166], [2, -1, 0.0166], [-1, 2, 0.0166],
                 [0, 0, 0.0166], [2, -1, 0.0166], [-1, 3, 0.0166], [0, 2, 0.0166], [1, -2, 0.0166], [-1, 1, 0.0166],
                 [-1, 2, 0.0166], [2, -2, 0.0166], [-1, 2, 0.0166], [-1, 2, 0.0166], [0, -1, 0.0166], [-1, 2, 0.0166],
                 [1, -2, 0.0166], [-1, 1, 0.0166], [-2, -1, 0.0166], [-1, 0, 0.0166], [0, -1, 0.0166], [-1, 0, 0.0166],
                 [0, 0, 0.0166], [0, 0, 0.0166], [-1, -1, 0.0166], [-1, 2, 0.0166], [1, -3, 0.0166], [-1, 2, 0.0166],
                 [0, -1, 0.0166], [1, -2, 0.0166], [-1, 2, 0.0166], [0, 0, 0.0166], [0, 1, 0.0166], [-1, 1, 0.0166],
                 [0, -1, 0.0166], [1, 0, 0.0166], [-2, 4, 0.0166], [1, -1, 0.0166], [0, -1, 0.0166], [-1, 2, 0.0166],
                 [1, -2, 0.0166], [0, 1, 0.0166], [2, 1, 0.0166], [-1, 2, 0.0166], [2, -1, 0.0166], [-1, 1, 0.0166],
                 [0, 1, 0.0166], [2, -1, 0.0166], [0, 3, 0.0166], [1, 2, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166],
                 [1, -1, 0.0166], [1, -1, 0.0166], [-1, 4, 0.0166], [1, -1, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166],
                 [1, -2, 0.0166], [1, -1, 0.0166], [1, 1, 0.0166], [1, 1, 0.0166], [1, -1, 0.0166], [-1, 1, 0.0166],
                 [1, 0, 0.0166], [1, -2, 0.0166], [-1, 2, 0.0166], [0, 1, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166],
                 [1, -2, 0.0166], [1, 1, 0.0166], [0, 5, 0.0166], [1, -1, 0.0166], [1, 0, 0.0166], [-1, 1, 0.0166],
                 [1, -1, 0.0166], [1, 1, 0.0166], [1, 2, 0.0166], [1, 2, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166],
                 [0, 0, 0.0166], [2, -2, 0.0166], [0, 2, 0.0166], [1, 1, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166],
                 [1, -2, 0.0166], [2, -1, 0.0166], [0, 1, 0.0166], [0, 0, 0.0166], [0, 2, 0.0166], [0, 2, 0.0166],
                 [2, -3, 0.0166], [0, 2, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [-1, 1, 0.0166], [1, 0, 0.0166],
                 [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [0, 1, 0.0166], [1, -2, 0.0166], [-1, 2, 0.0166],
                 [-1, 1, 0.0166], [0, 0, 0.0166], [-1, 1, 0.0166], [1, -3, 0.0166], [-3, 2, 0.0166], [-1, 0, 0.0166],
                 [0, -1, 0.0166], [-1, 2, 0.0166], [1, -2, 0.0166], [0, -1, 0.0166], [-2, 1, 0.0166], [-1, 0, 0.0166],
                 [0, -1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [-1, -1, 0.0166], [-3, 2, 0.0166], [0, -1, 0.0166],
                 [-1, -1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, -2, 0.0166], [-3, 3, 0.0166], [0, -1, 0.0166],
                 [0, -1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [-3, 0, 0.0166], [-2, 2, 0.0166], [0, -3, 0.0166],
                 [-1, 1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [0, 1, 0.0166], [-1, 3, 0.0166], [1, 0, 0.0166],
                 [0, -1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [-3, 4, 0.0166], [0, -2, 0.0166],
                 [-1, 1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [1, 3, 0.0166], [0, 1, 0.0166], [1, -1, 0.0166],
                 [-1, 3, 0.0166]],
    "HAVOC": [[0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173],
              [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173],
              [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173],
              [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173], [0, 0, 0.0173],
              [0, 0, 0.0173], [-1, 2, 0.0173], [-4, 9, 0.0173], [0, 2, 0.0173], [0, 1, 0.0173], [-1, 2, 0.0173],
              [0, 0, 0.0173], [-1, -1, 0.0173], [-7, 9, 0.0173], [0, -1, 0.0173], [-1, 1, 0.0173], [-2, 2, 0.0173],
              [2, -2, 0.0173], [4, 7, 0.0173], [-1, 8, 0.0173], [4, -3, 0.0173], [-1, 2, 0.0173], [-1, 3, 0.0173],
              [3, -3, 0.0173], [-5, 10, 0.0173], [2, -1, 0.0173], [1, -1, 0.0173], [-3, 5, 0.0173], [2, -2, 0.0173],
              [1, 3, 0.0173], [-2, 5, 0.0173], [3, -2, 0.0173], [0, 2, 0.0173], [0, 1, 0.0173], [4, 0, 0.0173],
              [-2, 5, 0.0173], [2, 0, 0.0173], [1, 0, 0.0173], [-2, 3, 0.0173], [1, -2, 0.0173], [2, 3, 0.0173],
              [-2, 6, 0.0173], [3, -4, 0.0173], [-2, 5, 0.0173], [1, -1, 0.0173], [6, -1, 0.0173], [-2, 7, 0.0173],
              [4, -5, 0.0173], [-2, 5, 0.0173], [0, 0, 0.0173], [4, -2, 0.0173], [-3, 8, 0.0173], [2, -3, 0.0173],
              [1, 0, 0.0173], [-1, 2, 0.0173], [3, -5, 0.0173], [-2, 4, 0.0173], [-3, 5, 0.0173], [3, -5, 0.0173],
              [-3, 5, 0.0173], [0, 0, 0.0173], [2, -6, 0.0173], [-5, 7, 0.0173], [2, -4, 0.0173], [-1, 1, 0.0173],
              [-1, 2, 0.0173], [0, -6, 0.0173], [-6, 5, 0.0173], [-1, 1, 0.0173], [2, -5, 0.0173], [-3, 4, 0.0173],
              [0, -7, 0.0173], [-6, 4, 0.0173], [-2, 1, 0.0173], [3, -7, 0.0173], [-3, 5, 0.0173], [0, 0, 0.0173],
              [2, -6, 0.0173], [-5, 7, 0.0173], [1, -3, 0.0173], [1, -1, 0.0173], [-3, 5, 0.0173], [3, -4, 0.0173],
              [-3, 9, 0.0173], [2, -3, 0.0173], [1, -1, 0.0173], [-2, 5, 0.0173], [3, -4, 0.0173], [-3, 7, 0.0173],
              [0, 1, 0.0173], [3, -5, 0.0173], [-2, 4, 0.0173], [1, -2, 0.0173], [3, -3, 0.0173], [-2, 7, 0.0173],
              [2, -2, 0.0173], [1, -1, 0.0173], [-1, 3, 0.0173], [1, -1, 0.0173], [4, -2, 0.0173], [-2, 7, 0.0173],
              [2, -4, 0.0173], [0, 1, 0.0173], [-1, 2, 0.0173], [5, -5, 0.0173], [-2, 6, 0.0173], [2, -3, 0.0173],
              [0, 0, 0.0173], [-2, 3, 0.0173], [4, -6, 0.0173], [-2, 6, 0.0173], [2, -3, 0.0173], [1, -1, 0.0173],
              [-2, 4, 0.0173], [5, -6, 0.0173], [-2, 6, 0.0173], [0, 1, 0.0173], [3, -5, 0.0173], [-2, 4, 0.0173],
              [4, -3, 0.0173], [-2, 9, 0.0173], [0, 2, 0.0173], [3, -4, 0.0173], [-2, 5, 0.0173], [1, -1, 0.0173],
              [3, -1, 0.0173], [-2, 7, 0.0173], [2, -1, 0.0173], [1, -1, 0.0173], [-1, 2, 0.0173], [1, -1, 0.0173],
              [0, 0, 0.0173], [0, 5, 0.0173], [2, -2, 0.0173], [1, -1, 0.0173], [-2, 3, 0.0173], [5, -3, 0.0173],
              [-1, 5, 0.0173], [0, 0, 0.0173], [4, -3, 0.0173], [-1, 2, 0.0173], [0, 0, 0.0173], [2, 0, 0.0173],
              [-2, 4, 0.0173], [2, -3, 0.0173], [-1, 2, 0.0173], [0, 0, 0.0173], [4, 2, 0.0173], [-1, 4, 0.0173],
              [2, -1, 0.0173], [0, 2, 0.0173], [0, 1, 0.0173], [5, -3, 0.0173], [0, 6, 0.0173], [1, -1, 0.0173],
              [2, -1, 0.0173], [-1, 2, 0.0173], [3, -2, 0.0173], [0, 4, 0.0173], [0, 1, 0.0173], [2, -3, 0.0173],
              [-1, 3, 0.0173], [3, -2, 0.0173], [1, 1, 0.0173], [0, 4, 0.0173], [2, -2, 0.0173], [0, 2, 0.0173],
              [0, 0, 0.0173], [2, -2, 0.0173], [-1, 5, 0.0173], [1, -1, 0.0173], [0, -1, 0.0173], [-1, 2, 0.0173],
              [1, -1, 0.0173], [-1, 4, 0.0173], [0, 1, 0.0173], [1, -1, 0.0173], [-1, 2, 0.0173], [0, 0, 0.0173],
              [1, 1, 0.0173], [-1, 3, 0.0173], [1, -1, 0.0173], [0, 1, 0.0173], [0, 1, 0.0173], [1, -2, 0.0173],
              [-1, 6, 0.0173], [0, 0, 0.0173], [1, -2, 0.0173], [-1, 3, 0.0173], [1, -2, 0.0173], [-1, 2, 0.0173],
              [-1, 3, 0.0173], [0, -2, 0.0173], [-1, 2, 0.0173], [0, 0, 0.0173], [-1, -2, 0.0173], [-3, 5, 0.0173],
              [0, 0, 0.0173], [0, -2, 0.0173], [-1, 2, 0.0173]],
    "HEMLOK": [[0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155],
               [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155],
               [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155],
               [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155],
               [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155], [0, 6, 0.155],
               [0, 6, 0.155]],
    "L-STAR": [[0, 0, 0.0147], [3, -1, 0.0147], [1, 5, 0.0147], [2, 3, 0.0147], [-1, 4, 0.0147], [1, -2, 0.0147],
               [0, 0, 0.0147], [5, 4, 0.0147], [1, 2, 0.0147], [0, 0, 0.0147], [2, -2, 0.0147], [0, 1, 0.0147],
               [3, 0, 0.0147], [0, 0, 0.0147], [2, 4, 0.0147], [0, 5, 0.0147], [2, 2, 0.0147], [0, 1, 0.0147],
               [1, -2, 0.0147], [1, 2, 0.0147], [0, 5, 0.0147], [-1, 4, 0.0147], [1, -1, 0.0147], [-1, 2, 0.0147],
               [1, -2, 0.0147], [-1, 1, 0.0147], [-2, 4, 0.0147], [-1, 2, 0.0147], [0, -1, 0.0147], [-1, 2, 0.0147],
               [0, 0, 0.0147], [1, -2, 0.0147], [-2, 5, 0.0147], [0, 3, 0.0147], [0, 2, 0.0147], [-1, 3, 0.0147],
               [2, -5, 0.0147], [-1, 4, 0.0147], [0, 0, 0.0147], [0, 1, 0.0147], [0, 0, 0.0147], [1, -3, 0.0147],
               [0, 0, 0.0147], [0, 0, 0.0147], [-2, 5, 0.0147], [-1, 5, 0.0147], [0, 1, 0.0147], [0, 1, 0.0147],
               [0, 0, 0.0147], [1, 1, 0.0147], [0, 3, 0.0147], [0, 0, 0.0147], [1, -4, 0.0147], [0, 2, 0.0147],
               [0, -1, 0.0147], [0, 0, 0.0147], [-1, 4, 0.0147], [0, 0, 0.0147], [0, 1, 0.0147], [0, 2, 0.0147],
               [0, -2, 0.0147], [1, 5, 0.0147], [0, 1, 0.0147], [0, 3, 0.0147], [1, -2, 0.0147], [-1, 3, 0.0147],
               [1, -4, 0.0147], [-2, 5, 0.0147], [-1, 4, 0.0147], [1, -4, 0.0147], [-1, 5, 0.0147], [1, -2, 0.0147],
               [0, -1, 0.0147], [1, 2, 0.0147], [1, 5, 0.0147], [0, 1, 0.0147], [1, 0, 0.0147], [0, 1, 0.0147],
               [1, -2, 0.0147], [0, 0, 0.0147], [-1, 5, 0.0147], [-1, 3, 0.0147], [0, 0, 0.0147], [0, -2, 0.0147],
               [0, -1, 0.0147], [0, 0, 0.0147], [-2, 5, 0.0147], [0, -1, 0.0147], [0, 0, 0.0147], [0, 2, 0.0147],
               [0, -2, 0.0147], [1, -1, 0.0147], [0, 5, 0.0147], [0, 3, 0.0147], [1, -2, 0.0147], [0, 3, 0.0147],
               [0, 0, 0.0147], [1, -4, 0.0147], [-2, 5, 0.0147], [0, -1, 0.0147], [0, 2, 0.0147], [0, 2, 0.0147],
               [0, -3, 0.0147], [2, 4, 0.0147], [0, 2, 0.0147], [1, -3, 0.0147], [0, 2, 0.0147], [0, 0, 0.0147],
               [0, 0, 0.0147], [0, 0, 0.0147], [0, 2, 0.0147], [0, 1, 0.0147], [0, 0, 0.0147], [0, 2, 0.0147],
               [0, -1, 0.0147], [-2, 1, 0.0147], [-1, 2, 0.0147], [0, 0, 0.0147], [0, -3, 0.0147], [0, 1, 0.0147],
               [0, -1, 0.0147], [0, 1, 0.0147], [0, 3, 0.0147], [0, 2, 0.0147], [0, 0, 0.0147], [0, 2, 0.0147],
               [0, 0, 0.0147], [-1, 0, 0.0147], [-1, 4, 0.0147], [0, -4, 0.0147], [0, 0, 0.0147], [-1, 4, 0.0147],
               [0, -4, 0.0147], [-1, 1, 0.0147], [-1, 3, 0.0147], [0, 1, 0.0147], [0, 0, 0.0147], [0, 1, 0.0147],
               [0, -1, 0.0147], [1, -1, 0.0147], [0, 5, 0.0147], [1, 0, 0.0147], [0, 0, 0.0147], [0, 4, 0.0147],
               [0, 0, 0.0147], [0, 0, 0.0147], [0, 0, 0.0147], [2, 3, 0.0147], [1, -3, 0.0147], [0, 1, 0.0147],
               [0, 2, 0.0147], [0, -2, 0.0147], [0, 5, 0.0147], [1, -3, 0.0147], [0, 1, 0.0147], [0, 0, 0.0147],
               [0, 1, 0.0147], [-2, 5, 0.0147], [-1, 4, 0.0147], [0, 0, 0.0147], [0, -3, 0.0147], [0, 1, 0.0147],
               [0, -1, 0.0147], [1, 2, 0.0147], [1, 4, 0.0147], [1, 1, 0.0147], [0, 0, 0.0147], [0, 2, 0.0147],
               [0, 0, 0.0147]],
    "P2020": [[0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14],
              [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14],
              [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14], [0, 5, 0.14]],
    "PROWLER": [[0, 0, 0.035], [-3, 8, 0.037], [3, 8, 0.037], [-3, 8, 0.037], [3, 8, 0.037], [0, 2, 0.255],
                [-4, 6, 0.037], [5, 6, 0.037], [-4, 6, 0.037], [5, 6, 0.037], [0, 2, 0.255], [-4, 5, 0.037],
                [5, 5, 0.037], [-2, 5, 0.037], [6, 5, 0.037], [0, 1, 0.255], [-2, 3, 0.037], [2, 3, 0.037],
                [-2, 3, 0.037], [2, 3, 0.037], [0, 1, 0.255], [-4, 3, 0.037], [-4, 3, 0.037], [-4, 3, 0.037],
                [-4, 3, 0.037], [-2, 1, 0.255], [-3, 3, 0.037], [-4, 3, 0.037], [-4, 3, 0.037], [-4, 3, 0.037],
                [-2, 1, 0.255], [-2, 3, 0.037], [1, 3, 0.037], [-2, 3, 0.037], [1, 3, 0.037]],
    "R-301": [[0, 0, 0.0191], [-2, 3, 0.0191], [2, 1, 0.0191], [-1, 2, 0.0191], [-1, 1, 0.0191], [1, -1, 0.0191],
              [-2, 4, 0.0191], [2, 2, 0.0191], [1, 0, 0.0191], [-2, 3, 0.0191], [1, 0, 0.0191], [-2, 2, 0.0191],
              [0, 2, 0.0191], [1, 0, 0.0191], [-2, 2, 0.0191], [1, -1, 0.0191], [-1, 3, 0.0191], [1, 1, 0.0191],
              [2, 0, 0.0191], [-1, 2, 0.0191], [1, -1, 0.0191], [-1, 4, 0.0191], [1, 2, 0.0191], [0, 1, 0.0191],
              [0, 1, 0.0191], [-1, 2, 0.0191], [0, 1, 0.0191], [2, -1, 0.0191], [-2, 2, 0.0191], [1, -1, 0.0191],
              [-2, 2, 0.0191], [1, 0, 0.0191], [-1, 1, 0.0191], [-1, 1, 0.0191], [-2, 1, 0.0191], [0, 0, 0.0191],
              [1, -2, 0.0191], [-2, 2, 0.0191], [1, -1, 0.0191], [-2, 2, 0.0191], [1, 0, 0.0191], [-1, 1, 0.0191],
              [-1, 1, 0.0191], [1, -1, 0.0191], [-3, 1, 0.0191], [1, -2, 0.0191], [-2, 1, 0.0191], [1, -1, 0.0191],
              [-2, 2, 0.0191], [0, -1, 0.0191], [-1, 0, 0.0191], [-1, 0, 0.0191], [1, -1, 0.0191], [0, 3, 0.0191],
              [2, -1, 0.0191], [-1, 1, 0.0191], [0, 0, 0.0191], [2, 2, 0.0191], [2, 1, 0.0191], [1, 0, 0.0191],
              [0, 1, 0.0191], [1, 0, 0.0191], [0, 1, 0.0191], [2, -1, 0.0191], [1, 0, 0.0191], [-1, 1, 0.0191],
              [1, -1, 0.0191], [0, 2, 0.0191], [1, 0, 0.0191], [2, -2, 0.0191], [-1, 2, 0.0191], [2, -1, 0.0191],
              [1, 1, 0.0191], [2, -1, 0.0191], [1, 0, 0.0191], [0, 0, 0.0191], [1, -1, 0.0191], [0, 1, 0.0191],
              [2, -1, 0.0191], [-1, 1, 0.0191], [1, -1, 0.0191], [0, 2, 0.0191], [2, -1, 0.0191], [0, 1, 0.0191],
              [0, 1, 0.0191], [1, -1, 0.0191], [-3, 1, 0.0191], [1, -2, 0.0191], [-1, 0, 0.0191], [-1, 1, 0.0191],
              [-1, 0, 0.0191], [1, -1, 0.0191], [0, 0, 0.0191], [-1, 1, 0.0191], [1, -1, 0.0191], [-3, 2, 0.0191],
              [0, -1, 0.0191], [-1, 1, 0.0191], [0, 0, 0.0191], [0, 0, 0.0191], [-2, 0, 0.0191], [1, -2, 0.0191],
              [-2, 1, 0.0191], [1, -1, 0.0191], [-2, 1, 0.0191], [0, 0, 0.0191], [-1, 0, 0.0191], [-1, 1, 0.0191],
              [0, -1, 0.0191], [-3, -1, 0.0191], [1, -2, 0.0191], [-1, 1, 0.0191], [-1, 0, 0.0191], [-2, 0, 0.0191],
              [0, -1, 0.0191], [1, -2, 0.0191], [-2, 1, 0.0191], [1, -1, 0.0191], [-1, 2, 0.0191], [1, -1, 0.0191],
              [-1, 1, 0.0191], [-1, 1, 0.0191], [1, -1, 0.0191], [-1, 1, 0.0191], [1, -2, 0.0191], [0, 0, 0.0191],
              [0, 0, 0.0191], [-1, 1, 0.0191], [0, 1, 0.0191], [1, -1, 0.0191], [-1, 2, 0.0191]],
    "R-99": [[0, 0, 0.0144], [-1, 2, 0.0144], [0, 2, 0.0144], [1, 0, 0.0144], [-1, 1, 0.0144], [1, 3, 0.0144],
             [1, 0, 0.0144], [-1, 2, 0.0144], [0, -1, 0.0144], [2, 3, 0.0144], [1, 0, 0.0144], [-1, 1, 0.0144],
             [-1, 2, 0.0144], [1, 2, 0.0144], [-1, 1, 0.0144], [-1, 3, 0.0144], [0, 2, 0.0144], [1, 1, 0.0144],
             [-1, 1, 0.0144], [-3, 6, 0.0144], [0, 0, 0.0144], [-1, 2, 0.0144], [-2, 2, 0.0144], [-1, 2, 0.0144],
             [-1, 1, 0.0144], [-2, 2, 0.0144], [0, 1, 0.0144], [-1, 1, 0.0144], [0, 0, 0.0144], [-1, 3, 0.0144],
             [1, 0, 0.0144], [-1, 2, 0.0144], [2, 2, 0.0144], [2, 1, 0.0144], [0, 2, 0.0144], [2, 2, 0.0144],
             [2, 2, 0.0144], [0, 1, 0.0144], [0, 1, 0.0144], [1, 3, 0.0144], [0, 0, 0.0144], [0, 2, 0.0144],
             [1, 2, 0.0144], [2, 2, 0.0144], [-2, 2, 0.0144], [0, 0, 0.0144], [0, -2, 0.0144], [-1, 2, 0.0144],
             [1, 0, 0.0144], [-5, -2, 0.0144], [0, 0, 0.0144], [0, 0, 0.0144], [-2, 2, 0.0144], [0, 0, 0.0144],
             [-1, 0, 0.0144], [-2, 2, 0.0144], [0, -1, 0.0144], [-1, 1, 0.0144], [0, 1, 0.0144], [4, 1, 0.0144],
             [0, -1, 0.0144], [0, 2, 0.0144], [1, 0, 0.0144], [2, -2, 0.0144], [0, 1, 0.0144], [2, 2, 0.0144],
             [2, 0, 0.0144], [0, 1, 0.0144], [2, 2, 0.0144], [2, -2, 0.0144], [0, 1, 0.0144], [1, 3, 0.0144],
             [2, 0, 0.0144], [0, 1, 0.0144], [-1, 1, 0.0144], [0, 0, 0.0144], [0, 0, 0.0144], [-1, 1, 0.0144],
             [-2, -1, 0.0144], [-2, 0, 0.0144], [0, 0, 0.0144], [0, 0, 0.0144], [-3, 1, 0.0144], [-2, -2, 0.0144],
             [0, 2, 0.0144], [-1, 2, 0.0144], [1, -3, 0.0144], [-1, 1, 0.0144], [2, 2, 0.0144], [2, -1, 0.0144],
             [1, 2, 0.0144]],
    "R-59": [[0, 0, 0.0144], [-1, 2, 0.0144], [0, 2, 0.0144], [1, 0, 0.0144], [-1, 1, 0.0144], [1, 3, 0.0144],
             [1, 0, 0.0144], [-1, 2, 0.0144], [0, -1, 0.0144], [2, 3, 0.0144], [1, 0, 0.0144], [-1, 1, 0.0144],
             [-1, 2, 0.0144], [1, 2, 0.0144], [-1, 1, 0.0144], [-1, 3, 0.0144], [0, 2, 0.0144], [1, 1, 0.0144],
             [-1, 1, 0.0144], [-3, 6, 0.0144], [0, 0, 0.0144], [-1, 2, 0.0144], [-2, 2, 0.0144], [-1, 2, 0.0144],
             [-1, 1, 0.0144], [-2, 2, 0.0144], [0, 1, 0.0144], [-1, 1, 0.0144], [0, 0, 0.0144], [-1, 3, 0.0144],
             [1, 0, 0.0144], [-1, 2, 0.0144], [2, 2, 0.0144], [2, 1, 0.0144], [0, 2, 0.0144], [2, 2, 0.0144],
             [2, 2, 0.0144], [0, 1, 0.0144], [0, 1, 0.0144], [1, 3, 0.0144], [0, 0, 0.0144], [0, 2, 0.0144],
             [1, 2, 0.0144], [2, 2, 0.0144], [-2, 2, 0.0144], [0, 0, 0.0144], [0, -2, 0.0144], [-1, 2, 0.0144],
             [1, 0, 0.0144], [-5, -2, 0.0144], [0, 0, 0.0144], [0, 0, 0.0144], [-2, 2, 0.0144], [0, 0, 0.0144],
             [-1, 0, 0.0144], [-2, 2, 0.0144], [0, -1, 0.0144], [-1, 1, 0.0144], [0, 1, 0.0144], [4, 1, 0.0144],
             [0, -1, 0.0144], [0, 2, 0.0144], [1, 0, 0.0144], [2, -2, 0.0144], [0, 1, 0.0144], [2, 2, 0.0144],
             [2, 0, 0.0144], [0, 1, 0.0144], [2, 2, 0.0144], [2, -2, 0.0144], [0, 1, 0.0144], [1, 3, 0.0144],
             [2, 0, 0.0144], [0, 1, 0.0144], [-1, 1, 0.0144], [0, 0, 0.0144], [0, 0, 0.0144], [-1, 1, 0.0144],
             [-2, -1, 0.0144], [-2, 0, 0.0144], [0, 0, 0.0144], [0, 0, 0.0144], [-3, 1, 0.0144], [-2, -2, 0.0144],
             [0, 2, 0.0144], [-1, 2, 0.0144], [1, -3, 0.0144], [-1, 1, 0.0144], [2, 2, 0.0144], [2, -1, 0.0144],
             [1, 2, 0.0144]],
    "RE-45": [[0, 0, 0.0134], [0, 0, 0.0134], [-1, 4, 0.0134], [1, 0, 0.0134], [-1, 2, 0.0134], [0, -1, 0.0134],
              [-1, 5, 0.0134], [2, 0, 0.0134], [1, 0, 0.0134], [-1, 3, 0.0134], [1, -2, 0.0134], [-3, 5, 0.0134],
              [1, 0, 0.0134], [1, -2, 0.0134], [-2, 4, 0.0134], [1, -3, 0.0134], [-2, 5, 0.0134], [0, 1, 0.0134],
              [0, 1, 0.0134], [0, 1, 0.0134], [-1, 1, 0.0134], [0, 2, 0.0134], [0, 0, 0.0134], [0, 1, 0.0134],
              [0, 0, 0.0134], [-2, 4, 0.0134], [0, 0, 0.0134], [-1, 2, 0.0134], [0, -1, 0.0134], [1, -1, 0.0134],
              [-3, 4, 0.0134], [0, 0, 0.0134], [-1, 2, 0.0134], [0, 0, 0.0134], [-1, 0, 0.0134], [-2, 1, 0.0134],
              [1, 1, 0.0134], [0, 0, 0.0134], [0, -1, 0.0134], [-2, 3, 0.0134], [0, -1, 0.0134], [-1, 2, 0.0134],
              [0, 0, 0.0134], [-2, 3, 0.0134], [-1, -2, 0.0134], [1, -2, 0.0134], [-2, 3, 0.0134], [1, -2, 0.0134],
              [-2, 4, 0.0134], [-1, 1, 0.0134], [0, -3, 0.0134], [-1, 4, 0.0134], [1, -2, 0.0134], [-1, 4, 0.0134],
              [2, 1, 0.0134], [0, 1, 0.0134], [0, 1, 0.0134], [-1, -1, 0.0134], [-2, -1, 0.0134], [-1, 0, 0.0134],
              [-1, 0, 0.0134], [0, 0, 0.0134], [-1, 3, 0.0134], [-1, -3, 0.0134], [-1, 1, 0.0134], [0, 0, 0.0134],
              [1, -2, 0.0134], [-2, 4, 0.0134], [0, -3, 0.0134], [-1, 3, 0.0134], [0, -1, 0.0134], [0, 1, 0.0134],
              [1, -1, 0.0134], [0, 1, 0.0134], [0, 1, 0.0134], [0, -1, 0.0134], [-3, 2, 0.0134], [0, -2, 0.0134],
              [0, 3, 0.0134], [0, 0, 0.0134], [-2, 1, 0.0134], [-1, -1, 0.0134], [0, -2, 0.0134], [-1, 3, 0.0134],
              [0, 0, 0.0134], [0, -1, 0.0134], [0, 0, 0.0134], [-1, 0, 0.0134], [0, 0, 0.0134], [1, 2, 0.0134],
              [3, -1, 0.0134], [1, -1, 0.0134], [0, 2, 0.0134], [0, -2, 0.0134], [-1, 3, 0.0134], [0, -2, 0.0134],
              [0, -2, 0.0134], [-1, 2, 0.0134], [1, -2, 0.0134], [0, 0, 0.0134], [-5, 2, 0.0134], [-1, 1, 0.0134],
              [0, 0, 0.0134], [1, -2, 0.0134], [-2, 5, 0.0134], [1, -2, 0.0134], [-1, 3, 0.0134], [0, 0, 0.0134],
              [-2, 0, 0.0134], [-2, 0, 0.0134], [0, 1, 0.0134], [-1, 0, 0.0134], [1, -1, 0.0134], [-4, 1, 0.0134],
              [-1, -2, 0.0134], [-1, 3, 0.0134]],
    "RAMPAGE": [[0, 0, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [-1, 3, 0.0166], [-1, 3, 0.0166], [1, -2, 0.0166],
                [-1, 2, 0.0166], [1, -1, 0.0166], [0, -1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [0, 1, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [2, -1, 0.0166], [2, 3, 0.0166], [0, 4, 0.0166], [2, -2, 0.0166],
                [0, 2, 0.0166], [1, -1, 0.0166], [1, -1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [0, 1, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [1, 1, 0.0166], [1, 3, 0.0166], [1, 3, 0.0166], [1, -1, 0.0166],
                [-1, 2, 0.0166], [1, 0, 0.0166], [1, -1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [0, 1, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [0, 0, 0.0166], [-2, 2, 0.0166], [-1, 2, 0.0166], [1, -2, 0.0166],
                [-1, 0, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [-1, 1, 0.0166], [0, 0, 0.0166], [1, 0, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [0, 1, 0.0166], [1, 4, 0.0166], [-1, 4, 0.0166], [1, -2, 0.0166],
                [1, 1, 0.0166], [-1, 2, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166], [0, 1, 0.0166], [1, -1, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [0, 0, 0.0166], [-1, 2, 0.0166], [-2, 3, 0.0166], [1, -2, 0.0166],
                [0, 0, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [-1, 2, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [-3, 5, 0.0166], [1, -3, 0.0166],
                [-1, 1, 0.0166], [-1, 2, 0.0166], [1, -2, 0.0166], [-1, 2, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166], [-3, 4, 0.0166], [0, -1, 0.0166],
                [0, 0, 0.0166], [-1, 2, 0.0166], [0, -2, 0.0166], [0, 1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166], [-2, 4, 0.0166], [1, -2, 0.0166],
                [-1, 0, 0.0166], [-1, 2, 0.0166], [1, -2, 0.0166], [-1, 1, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [-1, 3, 0.0166], [0, 0, 0.0166],
                [0, 1, 0.0166], [-1, 2, 0.0166], [1, -1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [1, -1, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [-1, 1, 0.0166], [2, -2, 0.0166], [1, 3, 0.0166], [1, 1, 0.0166],
                [1, 0, 0.0166], [-1, 2, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [2, -1, 0.0166], [1, 4, 0.0166], [1, 2, 0.0166], [0, 0, 0.0166],
                [1, 1, 0.0166], [1, -2, 0.0166], [0, 0, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166],
                [0, 0, 0.0166], [0, -1, 0.0166], [1, 0, 0.0166], [1, 2, 0.0166], [1, 2, 0.0166], [1, -2, 0.0166],
                [0, 2, 0.0166], [1, -1, 0.0166], [0, -1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [0, 1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [1, -1, 0.0166], [1, 1, 0.0166], [0, 2, 0.0166], [1, -2, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [1, -1, 0.0166], [1, 2, 0.0166], [0, 2, 0.0166], [1, -2, 0.0166],
                [1, 0, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, 2, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 0, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [2, 2, 0.0166], [0, 2, 0.0166], [2, -2, 0.0166],
                [0, 1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, -1, 0.0166], [0, 2, 0.0166], [0, 2, 0.0166], [1, -2, 0.0166],
                [0, 1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [-1, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 0, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [-1, 4, 0.0166], [1, -2, 0.0166],
                [-1, 1, 0.0166], [-1, 1, 0.0166], [1, -2, 0.0166], [-1, 1, 0.0166], [1, 0, 0.0166], [0, -1, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [0, 4, 0.0166], [1, -2, 0.0166],
                [0, 0, 0.0166], [0, 2, 0.0166], [1, -2, 0.0166], [-1, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [0, 0, 0.0166], [-1, 4, 0.0166], [1, -3, 0.0166],
                [0, 1, 0.0166], [-1, 2, 0.0166], [1, -2, 0.0166], [-1, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [0, 2, 0.0166], [1, 1, 0.0166],
                [1, 0, 0.0166], [-1, 2, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166],
                [-1, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [1, 2, 0.0166], [1, 1, 0.0166],
                [1, 0, 0.0166], [-1, 2, 0.0166], [1, -1, 0.0166], [-1, 1, 0.0166], [0, -1, 0.0166], [1, -1, 0.0166],
                [-1, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [1, 0, 0.0166], [-1, 2, 0.0166], [0, 1, 0.0166],
                [0, 1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166], [0, 1, 0.0166], [-1, 0, 0.0166], [1, -1, 0.0166],
                [-1, 1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [1, -1, 0.0166], [0, 2, 0.0166], [1, 1, 0.0166],
                [0, 0, 0.0166], [-1, 2, 0.0166], [1, -1, 0.0166], [0, -1, 0.0166], [-1, 1, 0.0166], [1, -1, 0.0166],
                [-1, 0, 0.0166], [0, 1, 0.0166], [1, -2, 0.0166], [0, 2, 0.0166], [0, 2, 0.0166], [1, -2, 0.0166],
                [-1, 2, 0.0166], [1, -1, 0.0166], [0, -1, 0.0166], [0, 2, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, -1, 0.0166], [-1, 2, 0.0166], [-1, 2, 0.0166], [1, -2, 0.0166],
                [0, 0, 0.0166], [-1, 1, 0.0166], [0, -1, 0.0166], [0, 2, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [1, 2, 0.0166], [0, 2, 0.0166], [1, -1, 0.0166],
                [0, 0, 0.0166], [0, 1, 0.0166], [1, -1, 0.0166], [-1, 1, 0.0166], [0, 0, 0.0166], [1, 0, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [0, 0, 0.0166], [1, 2, 0.0166], [1, 3, 0.0166], [1, -2, 0.0166],
                [1, 0, 0.0166], [0, 2, 0.0166], [0, -1, 0.0166], [-1, 2, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 0, 0.0166], [1, 0, 0.0166], [-1, 0, 0.0166], [1, -1, 0.0166], [1, 5, 0.0166], [1, -2, 0.0166],
                [0, 0, 0.0166], [0, 2, 0.0166], [1, -2, 0.0166], [-1, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 2, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166], [1, -1, 0.0166], [-1, 5, 0.0166], [1, -2, 0.0166],
                [0, 0, 0.0166], [-1, 2, 0.0166], [1, -2, 0.0166], [-1, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166], [-1, 4, 0.0166], [0, -1, 0.0166],
                [0, 0, 0.0166], [-1, 2, 0.0166], [0, -2, 0.0166], [0, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, 0, 0.0166], [0, 0, 0.0166], [1, -1, 0.0166], [0, 2, 0.0166], [1, 1, 0.0166],
                [1, -1, 0.0166], [-1, 2, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166], [0, -1, 0.0166], [-1, 2, 0.0166], [-1, 0, 0.0166],
                [0, 0, 0.0166], [0, 2, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166], [1, -1, 0.0166], [0, 2, 0.0166], [1, 1, 0.0166],
                [0, 1, 0.0166], [0, 2, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 0, 0.0166], [0, 1, 0.0166], [1, -2, 0.0166], [0, 3, 0.0166], [1, 2, 0.0166], [1, -2, 0.0166],
                [-1, 3, 0.0166], [1, -1, 0.0166], [0, -1, 0.0166], [0, 2, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166],
                [0, 0, 0.0166], [0, -1, 0.0166], [0, -1, 0.0166], [-1, 2, 0.0166], [-1, 3, 0.0166], [0, -2, 0.0166],
                [0, 2, 0.0166], [0, -1, 0.0166], [0, -2, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166],
                [-1, 1, 0.0166], [1, -1, 0.0166], [0, 0, 0.0166], [1, 1, 0.0166], [1, 2, 0.0166], [0, -2, 0.0166],
                [0, 2, 0.0166], [1, -1, 0.0166], [-1, -1, 0.0166], [0, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [1, 1, 0.0166], [1, 2, 0.0166], [1, -2, 0.0166],
                [0, 0, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166], [0, 0, 0.0166], [0, 0, 0.0166],
                [0, 0, 0.0166], [0, -1, 0.0166], [0, 0, 0.0166], [0, 1, 0.0166], [-1, 2, 0.0166], [0, -1, 0.0166],
                [0, 0, 0.0166], [0, 1, 0.0166], [0, -1, 0.0166], [0, 1, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166], [0, -1, 0.0166], [1, -1, 0.0166], [1, 5, 0.0166], [0, -2, 0.0166],
                [1, 1, 0.0166], [0, 2, 0.0166], [0, -2, 0.0166], [0, 2, 0.0166], [0, 0, 0.0166], [0, -1, 0.0166],
                [0, 1, 0.0166], [0, -1, 0.0166]],
    "SPITFIRE": [[0, 0, 0.0165], [0, 0, 0.0165], [2, 0, 0.0165], [-1, 5, 0.0165], [1, 3, 0.0165], [1, 0, 0.0165],
                 [-1, 3, 0.0165], [1, -1, 0.0165], [0, 0, 0.0165], [1, -1, 0.0165], [0, 2, 0.0165], [-1, 3, 0.0165],
                 [1, -3, 0.0165], [-1, 2, 0.0165], [1, -1, 0.0165], [1, -1, 0.0165], [1, 1, 0.0165], [1, 5, 0.0165],
                 [1, -1, 0.0165], [0, 1, 0.0165], [0, 1, 0.0165], [1, -1, 0.0165], [1, 0, 0.0165], [0, 3, 0.0165],
                 [0, 2, 0.0165], [2, -1, 0.0165], [-1, 2, 0.0165], [0, -1, 0.0165], [1, -1, 0.0165], [1, 3, 0.0165],
                 [0, 0, 0.0165], [1, 1, 0.0165], [0, 1, 0.0165], [0, 1, 0.0165], [0, -1, 0.0165], [0, 1, 0.0165],
                 [1, -2, 0.0165], [-2, 7, 0.0165], [1, -2, 0.0165], [1, -1, 0.0165], [-1, 3, 0.0165], [1, -1, 0.0165],
                 [1, -1, 0.0165], [-1, 2, 0.0165], [-1, 1, 0.0165], [1, -2, 0.0165], [-1, 3, 0.0165], [1, -1, 0.0165],
                 [0, 0, 0.0165], [0, -1, 0.0165], [-2, 1, 0.0165], [-1, 1, 0.0165], [0, -2, 0.0165], [-1, 1, 0.0165],
                 [1, -1, 0.0165], [0, 1, 0.0165], [0, -3, 0.0165], [0, 0, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165],
                 [-1, 2, 0.0165], [0, 0, 0.0165], [1, -3, 0.0165], [0, 0, 0.0165], [-3, 5, 0.0165], [1, -3, 0.0165],
                 [-1, 3, 0.0165], [1, -2, 0.0165], [0, 0, 0.0165], [-1, 1, 0.0165], [1, 0, 0.0165], [-1, 5, 0.0165],
                 [1, -3, 0.0165], [0, -1, 0.0165], [-1, 2, 0.0165], [1, -1, 0.0165], [1, 0, 0.0165], [0, 3, 0.0165],
                 [1, -1, 0.0165], [0, 1, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165], [0, 0, 0.0165], [3, 2, 0.0165],
                 [0, 3, 0.0165], [2, -2, 0.0165], [0, 0, 0.0165], [0, 1, 0.0165], [0, -1, 0.0165], [1, -1, 0.0165],
                 [0, 3, 0.0165], [1, -1, 0.0165], [0, 0, 0.0165], [-1, 2, 0.0165], [1, -1, 0.0165], [-1, 1, 0.0165],
                 [2, -3, 0.0165], [1, 1, 0.0165], [-1, 3, 0.0165], [3, -4, 0.0165], [-1, 3, 0.0165], [0, -1, 0.0165],
                 [1, -2, 0.0165], [0, 2, 0.0165], [0, 1, 0.0165], [0, 0, 0.0165], [1, -3, 0.0165], [-1, 1, 0.0165],
                 [0, 0, 0.0165], [1, 0, 0.0165], [-1, 3, 0.0165], [0, 1, 0.0165], [1, -2, 0.0165], [-1, 2, 0.0165],
                 [1, -1, 0.0165], [0, -1, 0.0165], [1, 3, 0.0165], [-1, 2, 0.0165], [1, -2, 0.0165], [0, 1, 0.0165],
                 [0, 1, 0.0165], [0, -1, 0.0165], [-1, 1, 0.0165], [2, -1, 0.0165], [-1, 4, 0.0165], [1, -1, 0.0165],
                 [0, -1, 0.0165], [-1, 2, 0.0165], [1, -2, 0.0165], [1, 0, 0.0165], [1, 2, 0.0165], [0, 1, 0.0165],
                 [1, -1, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165], [1, 0, 0.0165], [0, 0, 0.0165], [-1, 2, 0.0165],
                 [1, -3, 0.0165], [0, 0, 0.0165], [0, 1, 0.0165], [0, -1, 0.0165], [-1, 1, 0.0165], [1, -2, 0.0165],
                 [-2, 5, 0.0165], [1, -1, 0.0165], [0, -1, 0.0165], [-1, 3, 0.0165], [1, -2, 0.0165], [0, -1, 0.0165],
                 [-1, 4, 0.0165], [-1, 1, 0.0165], [1, -3, 0.0165], [-1, 3, 0.0165], [1, -2, 0.0165], [0, -1, 0.0165],
                 [0, -1, 0.0165], [-3, 3, 0.0165], [1, -2, 0.0165], [0, 0, 0.0165], [-1, 2, 0.0165], [0, -1, 0.0165],
                 [0, -1, 0.0165], [-1, 2, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165], [-1, 1, 0.0165], [0, -1, 0.0165],
                 [0, -1, 0.0165], [0, 1, 0.0165], [-1, 0, 0.0165], [-1, 3, 0.0165], [1, -3, 0.0165], [0, -1, 0.0165],
                 [-1, 1, 0.0165], [1, -1, 0.0165], [0, -1, 0.0165], [-2, 3, 0.0165], [1, -2, 0.0165], [-1, 1, 0.0165],
                 [-1, 1, 0.0165], [1, -2, 0.0165], [0, -1, 0.0165], [-1, 3, 0.0165], [-1, 2, 0.0165], [1, -3, 0.0165],
                 [-1, 3, 0.0165], [1, -1, 0.0165], [0, -1, 0.0165], [0, -1, 0.0165], [-3, 5, 0.0165], [1, -2, 0.0165],
                 [0, 1, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165], [1, 0, 0.0165], [-1, 3, 0.0165], [0, 2, 0.0165],
                 [1, -1, 0.0165], [0, 1, 0.0165], [0, 0, 0.0165], [0, -1, 0.0165], [0, 1, 0.0165], [-2, -1, 0.0165],
                 [-1, 2, 0.0165], [1, -3, 0.0165], [0, 0, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165], [0, -1, 0.0165],
                 [-1, 2, 0.0165], [0, -2, 0.0165], [-1, 1, 0.0165], [0, 2, 0.0165], [0, -2, 0.0165], [1, -1, 0.0165],
                 [-1, 2, 0.0165], [0, 1, 0.0165], [1, -2, 0.0165], [-1, 1, 0.0165], [0, -1, 0.0165], [0, -1, 0.0165],
                 [0, 1, 0.0165], [0, 0, 0.0165], [-1, 3, 0.0165], [1, -2, 0.0165], [0, -1, 0.0165], [-1, 1, 0.0165],
                 [1, -1, 0.0165], [1, -1, 0.0165], [0, 3, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165], [-1, 1, 0.0165],
                 [1, -1, 0.0165], [0, -1, 0.0165], [1, 3, 0.0165], [0, 2, 0.0165], [1, -2, 0.0165], [0, 0, 0.0165],
                 [0, 1, 0.0165], [0, -1, 0.0165], [-1, 1, 0.0165], [2, -2, 0.0165], [0, 5, 0.0165], [1, -2, 0.0165],
                 [0, -1, 0.0165], [-1, 2, 0.0165], [1, -2, 0.0165], [1, -1, 0.0165], [1, 3, 0.0165], [1, 1, 0.0165],
                 [1, -2, 0.0165], [0, 2, 0.0165], [1, -1, 0.0165], [0, -1, 0.0165], [1, 1, 0.0165], [-1, 1, 0.0165],
                 [0, 0, 0.0165], [1, -2, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165],
                 [-1, 5, 0.0165], [1, -1, 0.0165], [0, -1, 0.0165], [-1, 2, 0.0165], [0, 0, 0.0165], [1, -2, 0.0165],
                 [-1, 5, 0.0165], [0, 1, 0.0165], [1, -3, 0.0165], [-1, 3, 0.0165], [1, -2, 0.0165], [0, 0, 0.0165],
                 [1, 0, 0.0165], [1, 5, 0.0165], [0, -2, 0.0165], [1, 1, 0.0165], [-1, 1, 0.0165], [1, -1, 0.0165],
                 [1, -1, 0.0165], [0, 2, 0.0165], [1, 1, 0.0165], [1, -1, 0.0165], [0, 1, 0.0165], [0, -1, 0.0165],
                 [0, -1, 0.0165], [1, -1, 0.0165], [1, 2, 0.0165], [0, 0, 0.0165], [1, 0, 0.0165], [-1, 2, 0.0165],
                 [1, -1, 0.0165], [0, -1, 0.0165], [0, 1, 0.0165], [-1, 4, 0.0165], [0, -2, 0.0165], [0, 1, 0.0165],
                 [0, 1, 0.0165], [0, -1, 0.0165], [0, -1, 0.0165], [-2, 2, 0.0165], [-1, 1, 0.0165], [1, -2, 0.0165],
                 [-1, 2, 0.0165], [0, -1, 0.0165], [0, -1, 0.0165], [0, -1, 0.0165], [-2, 4, 0.0165], [1, -3, 0.0165],
                 [-1, 0, 0.0165], [0, 2, 0.0165], [0, -2, 0.0165], [0, 1, 0.0165], [-1, -2, 0.0165], [-1, 1, 0.0165],
                 [-1, 1, 0.0165], [0, -1, 0.0165], [-1, 3, 0.0165], [0, -1, 0.0165], [-1, -3, 0.0165], [-2, 3, 0.0165],
                 [-1, 0, 0.0165], [1, -2, 0.0165], [-1, 2, 0.0165], [1, -1, 0.0165], [0, 0, 0.0165], [-1, -2, 0.0165],
                 [-3, 4, 0.0165], [1, -3, 0.0165], [0, -1, 0.0165], [-1, 3, 0.0165], [0, -3, 0.0165], [0, 2, 0.0165],
                 [0, -1, 0.0165], [-1, 1, 0.0165], [-1, 3, 0.0165], [1, -2, 0.0165], [-1, 2, 0.0165], [0, -1, 0.0165],
                 [1, -1, 0.0165], [-2, 2, 0.0165], [-1, 3, 0.0165], [1, -3, 0.0165], [-1, 1, 0.0165], [0, 1, 0.0165],
                 [0, -1, 0.0165], [1, 1, 0.0165], [0, 2, 0.0165], [0, 0, 0.0165], [0, 0, 0.0165], [0, 1, 0.0165],
                 [0, -1, 0.0165], [-1, -2, 0.0165], [-1, 1, 0.0165], [-1, 1, 0.0165], [1, -2, 0.0165], [-1, 1, 0.0165],
                 [0, -1, 0.0165], [0, -1, 0.0165], [0, 1, 0.0165], [0, -3, 0.0165], [-2, 3, 0.0165], [1, -2, 0.0165],
                 [0, -1, 0.0165]],
    "VOLT": [[0, 0, 0.0161], [0, 0, 0.0161], [-2, 2, 0.0161], [0, 2, 0.0161], [0, 2, 0.0161], [0, 0, 0.0161],
             [0, -1, 0.0161], [0, 0, 0.0161], [0, 6, 0.0161], [1, -1, 0.0161], [-1, 2, 0.0161], [0, 0, 0.0161],
             [1, -2, 0.0161], [0, 8, 0.0161], [2, -2, 0.0161], [-1, 2, 0.0161], [-1, 1, 0.0161], [0, 2, 0.0161],
             [-1, 4, 0.0161], [1, -2, 0.0161], [0, 1, 0.0161], [0, 0, 0.0161], [0, 4, 0.0161], [1, 5, 0.0161],
             [1, -1, 0.0161], [-1, 2, 0.0161], [1, -1, 0.0161], [0, -1, 0.0161], [-3, 2, 0.0161], [-2, -1, 0.0161],
             [-1, 2, 0.0161], [0, 1, 0.0161], [0, -2, 0.0161], [0, 8, 0.0161], [1, -2, 0.0161], [0, 2, 0.0161],
             [-1, 2, 0.0161], [2, 2, 0.0161], [2, 3, 0.0161], [2, -2, 0.0161], [0, 2, 0.0161], [0, -1, 0.0161],
             [-2, 2, 0.0161], [-2, 3, 0.0161], [0, -2, 0.0161], [-1, 2, 0.0161], [1, -1, 0.0161], [0, 0, 0.0161],
             [0, 3, 0.0161], [1, 1, 0.0161], [0, 1, 0.0161], [1, 0, 0.0161], [0, -2, 0.0161], [2, 3, 0.0161],
             [2, -1, 0.0161], [0, 2, 0.0161], [0, 1, 0.0161], [0, -2, 0.0161], [3, 2, 0.0161], [2, -2, 0.0161],
             [-1, 2, 0.0161], [0, 1, 0.0161], [2, 1, 0.0161], [2, 2, 0.0161], [1, -2, 0.0161], [0, 1, 0.0161],
             [0, 0, 0.0161], [2, 2, 0.0161], [1, 2, 0.0161], [1, -1, 0.0161], [0, 2, 0.0161], [0, -1, 0.0161],
             [0, -1, 0.0161], [-2, 3, 0.0161], [1, -2, 0.0161], [-1, 2, 0.0161], [0, 0, 0.0161], [1, -2, 0.0161],
             [-2, 2, 0.0161], [-1, -2, 0.0161], [-1, 1, 0.0161], [0, 2, 0.0161], [1, -2, 0.0161], [-3, 1, 0.0161],
             [1, -2, 0.0161], [0, 1, 0.0161], [-1, 1, 0.0161], [1, 1, 0.0161], [0, 2, 0.0161], [0, -2, 0.0161],
             [0, 1, 0.0161], [1, 0, 0.0161], [1, 2, 0.0161], [1, 1, 0.0161], [1, -2, 0.0161], [0, 2, 0.0161],
             [0, -1, 0.0161], [0, 0, 0.0161], [2, 2, 0.0161], [2, -2, 0.0161], [-1, 2, 0.0161], [0, 0, 0.0161],
             [1, -2, 0.0161], [1, 2, 0.0161], [1, -2, 0.0161], [0, 2, 0.0161], [0, 0, 0.0161], [0, 1, 0.0161],
             [0, -1, 0.0161], [1, -2, 0.0161], [-1, 1, 0.0161], [1, 0, 0.0161], [2, 2, 0.0161], [1, 2, 0.0161],
             [1, -2, 0.0161], [0, 1, 0.0161], [0, 0, 0.0161], [-2, 2, 0.0161], [-2, 1, 0.0161], [0, -2, 0.0161],
             [0, 2, 0.0161], [0, -2, 0.0161], [0, 1, 0.0161], [0, 3, 0.0161], [2, -1, 0.0161], [-1, 2, 0.0161],
             [0, 1, 0.0161], [0, -2, 0.0161], [5, 3, 0.0161], [2, -2, 0.0161], [-1, 2, 0.0161]],
    "WINGMAN": [[0, 5, 0.33], [0, 5, 0.33], [0, 5, 0.33], [0, 5, 0.33], [0, 5, 0.33], [0, 5, 0.33], [0, 5, 0.33],
                [0, 5, 0.33], [0, 5, 0.33], [0, 5, 0.33], [0, 5, 0.33]]
}

flag_lock_obj = True  # 是否开启锁定的功能

flag = False

offset_x = 0

offset_y = 0

modifier_value = 0.92

pressure_gun_switch = True

left, top, width, height = 1548, 957, 156, 38

active_weapon = None

instantiation_pid_x, instantiation_pid_y = None, None

_aim_mod = 1


# 初始化_mouse_init
def _mouse_init():
    global instantiation_pid_x, instantiation_pid_y,_aim_mod
    pid_x_p = get_config_from_key('pid_x_p')
    pid_x_i = get_config_from_key('pid_x_i')
    pid_x_d = get_config_from_key('pid_x_d')

    pid_y_p = get_config_from_key('pid_y_p')
    pid_y_i = get_config_from_key('pid_y_i')
    pid_y_d = get_config_from_key('pid_y_d')

    _aim_mod = get_config_from_key('_aim_mod')

    instantiation_pid_x = PID_PLUS(0, pid_x_p, pid_x_i, pid_x_d)
    instantiation_pid_y = PID_PLUS(0, pid_y_p, pid_y_i, pid_y_d)

    print(f"X轴PID控制： p：{pid_x_p}   i：{pid_x_i}   d：{pid_x_d}   Y轴PID控制： p：{pid_y_p}   i：{pid_y_i}   d：{pid_y_d}")


def is_key_pressed(key_code):
    """检查指定的按键是否被按下"""
    return win32api.GetAsyncKeyState(key_code) < 0


def is_left_click():
    return is_key_pressed(win32con.VK_LBUTTON)


def is_right_click():
    return is_key_pressed(win32con.VK_RBUTTON)


def _down_gun_fun():
    while True:
        global flag, pressure_gun_switch, modifier_value, offset_x, offset_y, recoil_patterns, active_weapon
        if is_left_click() and pressure_gun_switch:
            try:
                # 尝试按照后坐力模式压枪
                for i in range(len(recoil_patterns[active_weapon])):
                    if not is_left_click() or not is_right_click():
                        continue
                    offset_x = int(recoil_patterns[active_weapon][i][0] / modifier_value)
                    offset_y = int(recoil_patterns[active_weapon][i][1] / modifier_value)
                    delay_ms(int(recoil_patterns[active_weapon][i][2] * 1000))
                    flag = True  # 如果代码执行到这里，说明压枪成功，将标志设置为 True

            except KeyError:
                flag = False
                pass  # 如果找不到后坐力模式，则不做任何操作
        else:
            flag = False
        delay_ms(1)


def on_click(x, y, button, pressed):
    global flag_lock_obj
    if not pressed:
        if button == config.mouse_lock_open:
            flag_lock_obj = True
            winsound.PlaySound('function/music/ok.wav', flags=1)
            print("锁定功能：开")
        if button == config.mouse_lock_close:
            winsound.PlaySound('function/music/close.wav', flags=1)
            flag_lock_obj = False
            print("锁定功能：关")


def _watch_gun(c):
    global active_weapon
    while True:
        _gun = c.get()
        # print(_gun, '推流获取的')
        if not _gun:
            continue
        if _gun != active_weapon:
            active_weapon = _gun
        delay_ms(100)


def threadInitialization(c):
    # 在这里启动键盘监听和任务处理线程
    keyboard.Listener(on_release=on_release).start()
    mouse.Listener(on_click=on_click).start()
    threading.Thread(target=_down_gun_fun).start()
    threading.Thread(target=_watch_gun, args=(c,)).start()


def on_release(key):
    global pressure_gun_switch, left, top, width, height, flag
    if key == keyboard.Key.f4:
        pressure_gun_switch = not pressure_gun_switch
        if pressure_gun_switch:
            winsound.PlaySound('function/music/8855.wav', flags=1)
        print(f'自动压枪：{"开" if pressure_gun_switch else "关"}')


def mouse_ctrl_func(q, c):
    global offset_y, offset_x
    _mouse_init()  # 初始化
    threadInitialization(c)  # 各线程初始化
    # 所有线程准备好后开始主循环
    while True:
        y = 0
        x = 0
        if abs(offset_y > y):
            y += offset_y
        if abs(offset_x > x):
            x += offset_x
        # 无目标时单纯压枪
        if q.empty() is True:
            if is_left_click():
                x = offset_x
                y = offset_y
                Logitech.mouse.move(x, y)  # 直接移动
                offset_x = 0
                offset_y = 0
            continue

        pos_min, box_width, box_height = q.get()

        abs_x = pos_min[0] if pos_min[0] > 0 else -pos_min[0]
        abs_y = pos_min[1] if pos_min[1] > 0 else -pos_min[1]

        _range = 0.8  # 0.5 - 1  值越小范围越小

        have_luck = abs_x <= (box_width * _range) and abs_y <= (box_height * _range)

        if _aim_mod == 1:
            is_luck = is_left_click()
        elif _aim_mod == 2:
            is_luck = is_right_click()
        elif _aim_mod == 3:
            is_luck = is_left_click() or is_right_click()

        # 有目标时 且 当前鼠标在目标框内 则跟住锁定压枪
        if flag_lock_obj and is_luck and have_luck:
            x = int(pos_min[0])
            # _fov_x = int(FOV_X(pos_min[0]))
            # _fov_y = int(FOV_Y(pos_min[1]))
            _pid_x = int(instantiation_pid_x.getMove(x))
            _pid_y = int(instantiation_pid_y.getMove(int(pos_min[1] + y)))
            # print(f"x：{x} _fov_x:{_fov_x} _pid_x：{_pid_x}")
            # print(f"y：{y} _fov_y:{_fov_y} _pid_y：{_pid_y}")
            # _mouse(_pid_x, _pid_y)
            segmented_movement_xy(_pid_x, (int(y + (pos_min[1] * 0.2))), 3, 6)  # 分段移动
            offset_y = 0
            offset_x = 0
