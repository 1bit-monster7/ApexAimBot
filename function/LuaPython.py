import time

pattern = [[0, 0, 0.0144], [-1, 2, 0.0144], [0, 2, 0.0144], [1, 0, 0.0144],
           [-1, 1, 0.0144], [1, 3, 0.0144], [1, 0, 0.0144], [-1, 2, 0.0144],
           [0, -1, 0.0144], [2, 3, 0.0144], [1, 0, 0.0144], [-1, 1, 0.0144],
           [-1, 2, 0.0144], [1, 2, 0.0144], [-1, 1, 0.0144], [-1, 3, 0.0144],
           [0, 2, 0.0144], [1, 1, 0.0144], [-1, 1, 0.0144], [-3, 6, 0.0144],
           [0, 0, 0.0144], [-1, 2, 0.0144], [-2, 2, 0.0144], [-1, 2, 0.0144],
           [-1, 1, 0.0144], [-2, 2, 0.0144], [0, 1, 0.0144], [-1, 1, 0.0144],
           [0, 0, 0.0144], [-1, 3, 0.0144], [1, 0, 0.0144], [-1, 2, 0.0144],
           [2, 2, 0.0144], [2, 1, 0.0144], [0, 2, 0.0144], [2, 2, 0.0144],
           [2, 2, 0.0144], [0, 1, 0.0144], [0, 1, 0.0144], [1, 3, 0.0144],
           [0, 0, 0.0144], [0, 2, 0.0144], [1, 2, 0.0144], [2, 2, 0.0144],
           [-2, 2, 0.0144], [0, 0, 0.0144], [0, -2, 0.0144], [-1, 2, 0.0144],
           [1, 0, 0.0144], [-5, -2, 0.0144], [0, 0, 0.0144], [0, 0, 0.0144],
           [-2, 2, 0.0144], [0, 0, 0.0144], [-1, 0, 0.0144], [-2, 2, 0.0144],
           [0, -1, 0.0144], [-1, 1, 0.0144], [0, 1, 0.0144], [4, 1, 0.0144],
           [0, -1, 0.0144], [0, 2, 0.0144], [1, 0, 0.0144], [2, -2, 0.0144],
           [0, 1, 0.0144], [2, 2, 0.0144], [2, 0, 0.0144], [0, 1, 0.0144],
           [2, 2, 0.0144], [2, -2, 0.0144], [0, 1, 0.0144], [1, 3, 0.0144],
           [2, 0, 0.0144], [0, 1, 0.0144], [-1, 1, 0.0144], [0, 0, 0.0144],
           [0, 0, 0.0144], [-1, 1, 0.0144], [-2, -1, 0.0144], [-2, 0, 0.0144],
           [0, 0, 0.0144], [0, 0, 0.0144], [-3, 1, 0.0144], [-2, -2, 0.0144],
           [0, 2, 0.0144], [-1, 2, 0.0144], [1, -3, 0.0144], [-1, 1, 0.0144],
           [2, 2, 0.0144], [2, -1, 0.0144], [1, 2, 0.0144]]

sens = 5
ads = 1
zoom_sens = ads / 1.8
modifier = 4 / sens * zoom_sens


def on_event(event, arg):
    global pattern, sens, zoom_sens, modifier
    if event == "PROFILE_ACTIVATED":
        enable_primary_mouse_button_events(True)
    if is_key_lock_on("capslock") and event == "MOUSE_BUTTON_PRESSED" and arg == 1:
        if is_mouse_button_pressed(3):
            for i in range(len(pattern)):
                if not is_mouse_button_pressed(1):
                    break
                move_mouse_relative(round(pattern[i][0] * modifier), round(pattern[i][1] * modifier))
                time.sleep(pattern[i][2])
# 注释：
#
# pattern：鼠标移动的轨迹，每个元素包含3个值：x方向移动距离、y方向移动距离和移动持续时间（秒）；
# sens：灵敏度；
# zoom_sens：缩放灵敏度 ads 开镜灵敏度；
# modifier：根据灵敏度和缩放灵敏度计算得出的一个修正系数；
# on_event()：事件处理函数，根据不同的事件类型做出相应的响应，如激活脚本时启用主鼠标按钮事件、按下鼠标左键点击右键时执行移动操作等；
# is_key_lock_on()：判断是否开启了大写锁定键；
# enable_primary_mouse_button_events()：启用或禁用主鼠标按钮事件；
# is_mouse_button_pressed()：判断鼠标按键是否按下；
# move_mouse_relative()：相对移动鼠标的位置；
# time.sleep()：暂停程序执行一定的时间（秒）。
